template(name="message")
  div
    +React component=MessageID messageID=_id

template(name="readMessage")
  div
    +React component=ReadMessage message=messageNoChildren

//- 'sharejsCM' is a helper, not an actual template,
    so we need an intermediate template to call it properly.
template(name="sharejs")
  +sharejsCM docid=docid onRender=onRender onError=onError

template(name="submessageHeader")
  div
    +React component=SubmessageHeader message=message

template(name="submessageHeaderNoChildren")
  div
    +React component=SubmessageHeader message=messageNoChildren

template(name="messageBad")
  if ready
    .alert.alert-danger The message &ldquo;<b>#{message}</b>&rdquo; does not exist or you do not have permission to access it.
    unless currentUser
      p You probably need to log in.
  else
    .alert.alert-warning Loading message &ldquo;<b>#{message}</b>&rdquo;...

template(name="mismatchedGroupMessage")
  if wildGroup
    .alert.alert-warning Redirecting to group &ldquo;<b>#{group}</b>&rdquo;...
  else
    .alert.alert-danger
      p Message &ldquo;<b>#{_id}</b>&rdquo; does not belong to group &ldquo;<b>#{routeGroup}</b>&rdquo;.
      p Perhaps it moved?  Here is a link to the message in the correct group, &ldquo;<b>#{group}</b>&rdquo;:
      p
        a(href="{{pathFor 'message' GROUP=group message=_id}}") {{urlFor 'message' GROUP=group message=_id}}

template(name="submessage")
  div
    +React component=Submessage message=message

//- The following two templates have been ported to React
    but are still needed for Settings view
template(name="keyboardSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      | #{keyboard}
      span.caret
    ul.dropdown-menu(role="menu")
      li.editorKeyboard(class="{{activeKeyboard 'normal'}}")
        a(href="#",data-keyboard="normal") Normal
      li.editorKeyboard(class="{{activeKeyboard 'vim'}}")
        a(href="#",data-keyboard="vim") Vim
      li.editorKeyboard(class="{{activeKeyboard 'emacs'}}")
        a(href="#",data-keyboard="emacs") Emacs

template(name="formatSelector")
  .btn-group
    button.btn.btn-default.dropdown-toggle(type="button", data-toggle="dropdown", aria-haspopup="true", aria-expanded="false", tabindex=tabindex)
      if format
        | {{capitalize format}}
      else
        | {{capitalize defaultFormat}}
      span.caret
    ul.dropdown-menu(role="menu")
      each formats
        li.editorFormat(class=active)
          a(href="#",data-format=format)= capitalized

template(name="superdelete")
  .modal
    .modal-dialog
      .modal-content
        .modal-header
          h2 Confirm Superdelete
        .modal-body
          p Are you sure you want to delete &ldquo;#{title}&rdquo; (#{_id}) by #{creator}?
          p Superdelete destroys all logs of the message ever existing and cannot be undone.  Use only for silly mistakes.
        .modal-footer
          button.btn.btn-warning.shallowSuperdeleteButton Superdelete node, not descendants
          button.btn.btn-danger.deepSuperdeleteButton Recursively superdelete node and descendants
          button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="messageParentDialog")
  .modal
    .modal-dialog.modal-lg.messageParentDialog
      .modal-content
        //-.flexColumn
        .modal-header
          h2 Move Message
        .modal-body.flexColumn
          .row.header-row
            .col-xs-6 Change parent for bottom message:
            .col-xs-6
              input.form-control.parent.typeahead(type="text", placeholder="Message title/ID or group name", value='')
          .row.flexShrink.flexRow
            .col-xs-6.scrollbars
              with oldParent
                +groupOrMessage
            .col-xs-6.scrollbars
              with parent
                +groupOrMessage
          .row
            .col-xs-12.parentArrow
              .parentArrow1
              span.fas.fa-times
              |<div class="parentArrow2"></div><div class="parentArrow3"></div>
              span.fas.fa-check
              .parentArrow4
          .row.flexShrink.flexRow
            .col-xs-12.scrollbars
              with child
                +groupOrMessage
        .modal-footer.flexRow.flexCenter
          //-.flexColumn
          .pull-left.hidden-xs.hidden-sm
            span.fas.fa-lightbulb
          .flexGrow
            span.hidden-xs.hidden-sm You can move messages by dragging in the table of contents.
          .btn-group.space.flexNoShrink
            button.btn.btn-danger.messageParentButton Move
            button.btn.btn-success.cancelButton.fullwidth Cancel

template(name="groupOrMessage")
  if loadedMessage
    +readMessage
  else
    .panel.panel-primary
      .panel-heading.compact.title.clearfix
        span.push-down.btn-group.btn-group-xs
          .fake-btn &#8203;
        if isGroup
          span.title.panel-title
            | #{group}
          i.pull-right.push-down (root message in this group)
        else
          span.title.panel-title
            | Message #{_id}
          i.pull-right.push-down (unloaded message)
